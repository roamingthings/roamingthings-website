<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>testing on roamingthings</title><link>https://roamingthings.de/tags/testing/</link><description>Recent content in testing on roamingthings</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021 Alexander Sparkowsky</copyright><lastBuildDate>Sun, 04 Jun 2017 09:46:56 +0000</lastBuildDate><atom:link href="https://roamingthings.de/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Control following of redirects with Rest-Assured</title><link>https://roamingthings.de/posts/following-of-redirects-with-rest-assured/</link><pubDate>Sun, 04 Jun 2017 09:46:56 +0000</pubDate><guid>https://roamingthings.de/posts/following-of-redirects-with-rest-assured/</guid><description>By default Rest-Assured will follow a redirection if it receives a 302 response after issuing a request. In this case your checks will be applied to the response after the redirect.
Some times you may not want this to happen and rather examine the response of the original request for example to extract cookies or assert the correct location of the redirect.
To achieve this you can use the redirects().follow(false) directive when formulating the request:</description></item><item><title>Running/Debugging Arquillian Integration-Tests with WildFly inside IntelliJ 15</title><link>https://roamingthings.de/posts/arquillian-integration-tests-wildfly-intellij-15/</link><pubDate>Tue, 01 Mar 2016 18:00:00 +0000</pubDate><guid>https://roamingthings.de/posts/arquillian-integration-tests-wildfly-intellij-15/</guid><description>Unfortunately integration testing needs a great effort to be set up. But once you have it up and running you benefit from being able to examine how multiple parts are working together.
Configure the embedded container using maven Add an Arquillian profile to your pom.xml. This will allow you to run the integration-tests using maven and allows you to deploy and configure the WildFly container itself.
&amp;lt;profiles&amp;gt; &amp;lt;profile&amp;gt; &amp;lt;id&amp;gt;arquillian-wildfly-embedded&amp;lt;/id&amp;gt; &amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.</description></item></channel></rss>