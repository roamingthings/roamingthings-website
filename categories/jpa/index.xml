<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JPA on roamingthings</title><link>https://roamingthings.de/categories/jpa/</link><description>Recent content in JPA on roamingthings</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2021 Alexander Sparkowsky</copyright><lastBuildDate>Sun, 09 Jul 2017 07:45:49 +0000</lastBuildDate><atom:link href="https://roamingthings.de/categories/jpa/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Kotlin "data class" in bi-directional JPA relations</title><link>https://roamingthings.de/posts/kotlin-data-class-in-bi-directional-jpa-relations/</link><pubDate>Sun, 09 Jul 2017 07:45:49 +0000</pubDate><guid>https://roamingthings.de/posts/kotlin-data-class-in-bi-directional-jpa-relations/</guid><description>Data classes in Kotlin provide an easy way to implement entity beans for JPA without a lot of boilerplate code. This also includes toString(), hashCode() and equals() methods.
However when you are modelling a bi-directional relationship between to entities you run into trouble since the toString() methods of both entities will call each other recursively ending in a StackOverflowException eventually.
@Entity data class Child( @Id @GeneratedValue val id: Long? = null, val name: String, @ManyToOne val parent: Parent?</description></item><item><title>[100 Days of Code] Day 056: June 7, 2017</title><link>https://roamingthings.de/posts/100doc-day056/</link><pubDate>Wed, 07 Jun 2017 19:10:42 +0000</pubDate><guid>https://roamingthings.de/posts/100doc-day056/</guid><description>Today&amp;rsquo;s Progress: I have been fighting with eclipse link the whole time. Suddenly my integration tests that where using JPA did stop working. Finally I decided to switch to Hibernate which solved my problems.
Things I&amp;rsquo;ve learned: I will be using Hibernate from now on whenever possible.
Things I&amp;rsquo;ve planned for tomorrow: Continue to publish the whole dependency chain so I can continue with my CD pipeline.
Link(s) to work: rules-jpa</description></item></channel></rss>